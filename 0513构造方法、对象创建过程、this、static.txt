一、构造方法/构造器的要点：
1.通过new关键字调用
2.构造器虽然有返回值，但是不能定义返回值类型（返回值类型肯定是本类），不能再构造器里使用return返回某个值
3.如果我们没有定义构造器，则编译器会自动定义一个无参的构造方法。如果已定义则编译器不会自动添加
4.构造方法的方法名必须与类名一致
5.构造方法可以重载

二、对象的创建过程
创建一个对象分为四步：
1.分配对象空间，并将对象成员变量初始化为0或为空
2.执行属性值的显示初始化
3.执行构造方法
4.返回对象的地址给相关的变量

三、This的本质就是“创建好的对象的地址”，由于在构造方法调用前，对象已经创建。因此，在构造方法中也可以使用this代表“当前对象”。

四、This的用法
1.程序中产生二义性处，使用this来指明当前对象。普通方法中，this总是指向调用该方法的对象。构造方法中，this总是指向正要初始化的对象。
2.使用this关键字调用重载的构造方法，避免相同的初始化代码。但只能在构造方法中用，并且必须位于构造方法的第一句。
3.This不能用于static方法中，因为static方法在方法区，不是对象所在的这一特定内存中

五、用static声明的成员变量为静态成员变量
它为该类的公用变量，属于类，被该类的所有实例共享，在类被载入时被显式初始化，
1.对于该类的所有对象来说，static成员变量只有一份。被该类的所有对象共享！
2.可以使用“对象.类属性”来调用。 不过，一般都是用“类名.类属性”
3. static变量置于方法区中！
4.用static声明的方法为静态方法
5.不需要对象，就可以调用(类名.方法名)
6.在调用该方法时，不会将对象的引用传递给它，所以在static方法中不可访问非static的成员。
7.静态方法不能以任何方式引用this和super关键字

六、静态初始化块
如果希望加载后， 对整个类进行某些初始化操作， 可以使用static初始化块。
1.类第一次被载入时先执行static代码块； 类多次载入时， static代码块只执行一次； Static经常用来进行static变量的初始化。
2.是在类初始化时执行， 不是在创建对象时执行。
3.静态初始化块中不能访问非static成员。
